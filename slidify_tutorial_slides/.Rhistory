model1<-lm(y~x)
model1$coefficients
summary(model1)
model1$effects
model1$rank
model1$fitted.values
model1$
model1$assign
summary(model1)
model1$qr
model1$qr
model1$df.residual
model1$xlevels
model1$xlevels[1]
model1$call
model1$terms
model1$model
summary(model1)
summary(model1)$sigma
model1$sigma
model1$residuals
summary(model1)$sigma
n<- length(x)
model1$coefficients
summary(model1)$coefficients
beta1 <- cor(y, x) * sd(y) / sd(x)  ## instead of lm()
beta0 <- mean(y) - beta1 * mean(x)  ## "
e <- y - beta0 - beta1 * x          ##
sigma <- sqrt(sum(e^2) / (n-2))     ## residual
ssx <- sum((x - mean(x))^2)         ## sum of squared Xs
seBeta0 <- (1 / n + mean(x) ^ 2 / ssx) ^ .5 * sigma  ## standard error
seBeta1 <- sigma / sqrt(ssx)  ## standard error
tBeta0 <- beta0 / seBeta0; tBeta1 <- beta1 / seBeta1   ## t-stats
pBeta0 <- 2 * pt(abs(tBeta0), df = n - 2, lower.tail = FALSE) ## p-value
pBeta1 <- 2 * pt(abs(tBeta1), df = n - 2, lower.tail = FALSE) ## "
coefTable
coefTable <- rbind(c(beta0, seBeta0, tBeta0, pBeta0), c(beta1, seBeta1, tBeta1, pBeta1))
colnames(coefTable) <- c("Estimate", "Std. Error", "t value", "P(>|t|)")
rownames(coefTable) <- c("(Intercept)", "x")
coefTable
sigma
summary(fit)$sigma  ## residual variation
summary(model1)$sigma  ## residual variation
sqrt(summary(model1)$sigma)  ## residual variation
sqrt(sum(resid(fit)^2) / (n - 2))
sqrt(sum(resid(model1)^2) / (n - 2))
summary(model1)$sigma  ## residual variation
model1$residuals
resid(model1)
summary(model1)$sigma  ## residual variation
sqrt(sum(resid(model1)^2) / (n - 2))
data(mtcars)
fit3 <- lm(mpg ~ w, data=mtcars)
names(mtcars)
fit3 <- lm(mpg ~ wt, data=mtcars)
resid(fit3)
resid(summary(fit3))
summary(fit3)
sumCoef <- summary(fit3)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit3$df) * sumCoef[1, 2]
fit3$df
sumCoef[1, 2]
sumCoef
summary(fit3)
mean(mtcars$wt)
mwt<-mean(mtcars$wt)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
fit3 <- lm(mpg ~ wt, data=mtcars)
sumCoef<-summary(fit3)$coefficients
mwt<-mean(mtcars$wt)
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit3$df) * sumCoef[1, 2]
fit3 <- lm(mpg ~ wt, data=mtcars)
sumCoef<-summary(fit3)$coefficients
mwt<-mean(mtcars$wt)
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit3$df) * sumCoef[1, 2]
sumCoef
mwt<-mean(mtcars$wt)
mwt
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit3$df) * sumCoef[1, 2]
mwt
sumCoef
sumCoef[1,1]
sumCoef[1, 2]
hist(mtcars$wt)
predict(fit3,newdata=mwt)
mwt - sumCoef[1, 2]
mmpg<-sumCoef[2,1] + mwt * sumCoef[1,1]
mmpg
mmpg - sumCoef[1, 2]
predict(fit , newdata = data.frame(x=mwt), interval="confidence")
predict(fit3 , newdata = data.frame(x=mwt), interval="confidence")
predict(fit3 , newdata = data.frame(x=wt), interval="confidence")
predict(fit3 , newdata = data.frame(x=wt), interval="confidence")
newdata <- data.frame(x = mtcars$wt)
predict(fit3 , newdata = data.frame(x=wt), interval="confidence")
predict(fit3 , newdata, interval="confidence")
newdata <- data.frame(x = mtcars$wt)
predict(fit3 , newdata, interval="confidence")
fit3 <- lm(mpg ~ wt, data=mtcars)
sumCoef<-summary(fit3)$coefficients
sumCoef
mwt<-mean(mtcars$wt)
mwt
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit3$df) * sumCoef[1, 2]
mmpg<-sumCoef[2,1] + mwt * sumCoef[1,1]
mmpg
mmpg - sumCoef[1, 2]
newdata <- data.frame(x = mtcars$wt)
predict(fit3, newdata = data.frame(wt=mwt), interval="confidence")
mmpg<-sumCoef[2,1] + mwt * sumCoef[1,1]
mmpg
mmpg - sumCoef[1, 2]
?mtcars
fit4<- lm(mpg ~ wt, data=mtcars)
fit4<- lm(mpg ~ wt, data=mtcars)
predict(fit3, newdata = data.frame(wt=3), interval="prediction")
fit5<- lm(mpg ~ wt, data=mtcars)
predict(fit5, newdata = data.frame(wt=3), interval="prediction")
predict(fit3, newdata = data.frame(wt=3), interval="prediction")
x <- runif(100, 0, 6); y <- x + rnorm(100,  mean = 0, sd = .001 * x);
plot(x, y)
yVals <- seq(min(y), max(y), by = .001)
abline(lm(y ~ x))
x <- runif(100, 0, 6); y <- x + rnorm(100,  mean = 0, sd = .001 * x);
plot(x, y)
yVals <- seq(min(y), max(y), by = .01)
abline(lm(y ~ x))
+ rnorm(100,  mean = 0, sd = .001 * x);
p
x <- runif(100, 0, 6); y <- x + rnorm(100,  mean = 0, sd = .001 * x);
plot(x, y, xlim=c(2,4), ylim=c(2,4)))
plot(x, y, xlim=c(2,4), ylim=c(2,4))
plot(x, y, xlim=c(3,4), ylim=c(3,4))
plot(x, y, xlim=c(3,4), ylim=c(2,5))
plot(x, y, xlim=c(3.6,4), ylim=c(2,5))
plot(x, y, xlim=c(2,5), ylim=c(2,5))
plot(x, y, xlim=c(2,5), ylim=c(2,5), ylog=T)
plot(x, y, xlim=c(2,5), yaxp(2,5,0.01))
plot(x, y, xlim=c(2,5), yaxp(c(2,5,0.01)))
plot(x, y, xlim=c(2,5), yaxp=(c(2,5,0.01)))
plot(x, y, xlim=c(2,5), yaxp=(c(2,5,0.1)))
plot(x, y, xlim=c(2,5), yaxp=(c(2,5,1)))
plot(x, y, xlim=c(2,5), yaxp=(c(2,5,10)))
plot(x, y, xlim=c(2,5), yaxp=(c(2,5,20)))
plot(x, y, xlim=c(2,5), ylim=c(2,5),yaxp=c(2,5,20))
plot(x, y, xlim=c(2,5), ylim=c(3,4))
plot(x, y, xlim=c(3,4), ylim=c(3,4))
plot(x, y, ylim=c(3,4))
plot(x, y)
fit6<- lm(mpg ~ I(wt/2, data=mtcars)
coef(fit6)
fit6<- lm(mpg ~ I(wt/2), data=mtcars)
coef(fit6)
predict(fit3, interval="confidence")
predict(fit6, interval="confidence")
coef(fit6)
?stats
library(help='stats')
sumCoef <- summary(fit6)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit6$df) * sumCoef[2, 2]
predict(fit6, newdata =data.frame(wt=wt), interval="confidence")
predict(fit6, newdata =data.frame(wt=mtcars$wt), interval="confidence")
predict(fit6, newdata =data.frame(wt=0.5), interval="confidence")
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit6$df) * sumCoef[2, 2]
predict(fit6, newdata =data.frame(wt=2000), interval="confidence")
predict(fit6, newdata =data.frame(wt=2), interval="confidence")
predict(fit6, newdata =data.frame(wt=0.5), interval="confidence")
predict(fit6, newdata =data.frame(wt=2), interval="confidence")
View(df)
df <- data.frame(mtcars$wt=2)
View(df)
df
str(df)
ugh <- data.frame(mtcars$wt=2)
ugh <- data.frame(wt=2)
str(ugh)
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit6$df) * sumCoef[2, 2]
fit6<- lm(mpg ~ I(wt*2), data=mtcars)
sumCoef <- summary(fit6)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit6$df) * sumCoef[2, 2]
fit6<- lm(mpg ~ I(wt/2), data=mtcars)
sumCoef <- summary(fit6)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit6$df) * sumCoef[2, 2]
y <- mtcars$wt
x <- mtcars$wt
y <- mtcars$mpg
beta1 <- cor(y, x) *  sd(y) / sd(x)
beta0 <- mean(y) - beta1 * mean(x)
coef(lm(y~x))
beta1
beta0 <- mean(y) - beta1 * mean(x)
beta0
coef(lm(y~x))
fit9<-lm(y~x)
coef(fit9)[1]
beta0
y_i.s <- coef(fit9)[1] + coef(fit9)[2] * x
y_itc <- coef(fit9)[1] + x
sqe_itc / sqe_i.s
y_i.s <- coef(fit9)[1] + coef(fit9)[2] * x
## predictions with just intercept
y_itc <- coef(fit9)[1] + x
## squared errors
sqe_i.s <- sum((y - y_i.s)^2)
sqe_itc <- sum((y - y_itc)^2)
## ratio of the two squared errors
sqe_itc / sqe_i.s
sqe_i.s / sqe_itc
sqrt(sqe_i.s / sqe_itc)
coef(fit9)
plot(x,y)
with(mtcars, plot(wt,mpg))
abline(fit9)
abline(coef(fit9[1]),col='red')
abline(fit9)
with(mtcars, plot(wt,mpg))
abline(fit9)
abline(coef(fit9)[1],col='red')
points(y_i.s, col='red')
with(mtcars, plot(wt,mpg))
abline(fit9, col='red')
abline(coef(fit9)[1],col='blue')
coef(fit9)
## predictions with intercept and slope
y_i.s <- coef(fit9)[1] + coef(fit9)[2] * x
points(y_i.s, col='red')
## predictions with just intercept
y_itc <- coef(fit9)[1] + x
points(y_i.s, col='blue')
with(mtcars, fit9<-lm(mpg ~ wt))
with(mtcars, plot(wt,mpg))
abline(fit9, col='red')
abline(coef(fit9)[1],col='blue')
coef(fit9)
## predictions with intercept and slope
y_i.s <- coef(fit9)[1] + coef(fit9)[2] * x
points(y_i.s, col='red')
## predictions with just intercept
y_itc <- coef(fit9)[1] + x
points(y_i.s, col='blue')
length(y_i.s)
length(y)
length(mtcars$wt)
y_i.s <- coef(fit9)[1] + coef(fit9)[2] * mtcars$wt
## predictions with just intercept
y_itc <- coef(fit9)[1] + mtcars$wt
## squared errors
sqe_i.s <- sum((y - y_i.s)^2)
sqe_itc <- sum((y - y_itc)^2)
## ratio of the two squared errors
sqrt(sqe_i.s / sqe_itc)
abline(h=coef(fit9)[1],col='blue')
with(mtcars, fit9<-lm(mpg ~ wt))
with(mtcars, plot(wt,mpg))
abline(fit9, col='red')
abline(h=coef(fit9)[1],col='blue')
coef(fit9)
sqe_i.s
sqe_itc
sqe_i.s <- sum((mtcars$mpg - y_i.s)^2)
sqe_i.s
sqe_itc <- sum((mycars$mpg - y_itc)^2)
sqe_itc
sqe_itc <- sum((mtcars$mpg - y_itc)^2)
sqe_itc
resid(fit9)
sum(resid(fit9))
sqe_i.s
sum(resid(fit9))
coef(fit9)
y_itc <- with(mtcars, mean(mpg)/mean(wt) * mtcars$wt
)
y_itc
sqe_i.s <- sum((mtcars$mpg - y_i.s)^2)
sqe_i.s
sqe_itc <- sum((mtcars$mpg - y_itc)^2)
sqe_itc
## ratio of the two squared errors
sqrt(sqe_i.s / sqe_itc)
sqrt(sqe_i.s / sqe_itc)
(sqe_i.s / sqe_itc)
y_itc <- with(mtcars, mean(mpg) * mtcars$wt)
## squared errors
sqe_i.s <- sum((mtcars$mpg - y_i.s)^2)
sqe_i.s
sqe_itc <- sum((mtcars$mpg - y_itc)^2)
sqe_itc
## ratio of the two squared errors
(sqe_i.s / sqe_itc)
sqrt(sqe_i.s / sqe_itc)
sqrt(sqe_i.s / y_itc)
sqe_itc <- sum(y_itc^2)
sqe_itc
sqe_i.s
sqrt(sqe_i.s / y_itc)
sqe_itc <- sum(y_itc^2)
## ratio of the two squared errors
sqr(sqe_i.s / sqe_itc)
sqrt(sqe_i.s / sqe_itc)
(sqe_i.s / sqe_itc)
sqe_itc <- sum(y_itc)
## ratio of the two squared errors
sqrt(sqe_i.s / sqe_itc)
sqe_i.s / sqe_itc
fit9<-with(mtcars, lm(mpg ~ wt))
coef(fit9)
beta0
beta1
y_i.s <- coef(fit9)[1] + coef(fit9)[2] * mtcars$wt
y_i.s <- predict(fit3)
yis <- coef(fit9)[1] + coef(fit9)[2] * mtcars$wt
yisp <- predict(fit3)
identical(yis,yisp)
yisp <- predict(fit3, newdata = mtcars$wt)
yisp <- predict(fit3, newdata = data.frame(mtcars$wt))
yisp <- predict(fit3, newdata = data.frame(wt))
yisp <- predict(fit9)
identical(yis,yisp)
yisp <- predict(fit9, newdata=wt)
yisp <- predict(fit9, newdata=data.frame(wt=mtcars$wt))
identical(yis,yisp)
yisp
yis <- coef(fit9)[1] + coef(fit9)[2] * mtcars$wt
yis
sqe_i.s <- sum((mtcars$mpg - yisp)^2)
sqe_itc <- sum((mtcars$mpg - yisp)^2)
y_itc
y_itc <- with(mtcars, -mean(mpg)/mean(wt) * mtcars$wt)
y_itc
y_itc <- with(mtcars, mean(mpg)/mean(wt) * mtcars$wt)
y_itc
## squared errors
sqe_i.s <- sum((mtcars$mpg - yisp)^2)
sqe_i.s
sqe_itc <- sum((mtcars$mpg - yisp)^2)
sqe_itc <- sum(y_itc)
## ratio of the two squared errors
sqrt(sqe_i.s / sqe_itc)
sqe_i.s <- sum((mtcars$mpg - yisp)^2)
sqe_i.s
sqe_itc <- sum((mtcars$mpg - yisp)^2)
## ratio of the two squared errors
sqrt(sqe_i.s / sqe_itc)
yitc <- with(mtcars, mean(mpg)/mean(wt) * mtcars$wt)
yitc
sqe_itc <- sum((mtcars$mpg - yitc)^2)
## ratio of the two squared errors
sqrt(sqe_i.s / sqe_itc)
sqe_i.s/mean(mtcars$mpg)
sqrt(sqe_i.s/mean(mtcars$mpg))
sqe_i.s/mean(mtcars$mpg)
)
sqrt(sqe_i.s/mean(mtcars$mpg))
library(swirl)
rm(list=ls())
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4)~parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit6<- lm(mpg ~ I(wt/2), data=mtcars)
predict(fit6,new.data(wt=wt/2), interval="confidence")
predict(fit6,newdata=data.frame(wt/2), interval="confidence")
predict(fit6,newdata=data.frame(wt=wt/2), interval="confidence")
predict(fit6,newdata=data.frame(wt=wt/2), interval="confidence")
fit6<- lm(mpg ~ I(wt/2), data=mtcars)
sumCoef <- summary(fit6)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit6$df) * sumCoef[2, 2]
summary(fit6)
predict(fit6,newdata=data.frame(wt=2), interval="confidence")
predict(fit6,newdata=data.frame(wt=0.5), interval="confidence")
predict(fit6,newdata=data.frame(wt=2), interval="confidence")
predict(fit6,newdata = I(wt=2), interval="confidence")
predict(fit6,newdata = data.frame(I(wt=2)), interval="confidence")
predict(fit6,newdata = data.frame(wt), interval="confidence")
predict(fit6,newdata = data.frame(wt=1), interval="confidence")
predict(fit6,newdata = data.frame(wt=0), interval="confidence")
fit6a<- lm(mpg ~ wt, data=mtcars)
predict(fit6a,newdata = data.frame(wt=2), interval="confidence")
predict(fit6a,newdata = data.frame(wt=0.5), interval="confidence")
wt2 <- wt/2
with(mtcars, wt2 <- wt/2)
wt2
mtcars$wt2
wt2
mtcars$wt2 <- mtcars$wt/2)
mtcars$wt2 <- mtcars$wt/2
mtcars$wt2
mtcars$wt
fit6a<- lm(mpg ~ wt2, data=mtcars)
predict(fit6a,newdata = data.frame(wt2), interval="confidence")
predict(fit6a,newdata = data.frame(mtcars$wt2), interval="confidence")
predict(fit6a,newdata = data.frame(wt2=1), interval="confidence")
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit6$df) * sumCoef[2, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit6a$df) * sumCoef[2, 2]
predict(fit6,newdata = data.frame(wt=wt2), interval="confidence")
predict(fit6,newdata = wt, interval="confidence")
predict(fit6,newdata = mtcars$wt, interval="confidence")
predict(fit6,mtcars$wt, interval="confidence")
predict(fit6a,mtcars$wt, interval="confidence")
predict(fit6a, newdata = data.frame(wt=1), interval="confidence")
predict(fit6a, newdata = data.frame(wt2=1), interval="confidence")
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit6a$df) * sumCoef[2, 2]
predict(fit6a, newdata = data.frame(wt2=2), interval="confidence")
predict(fit6a, newdata = data.frame(wt2=-2), interval="confidence")
predict(fit6a, newdata = data.frame(wt2=0.5), interval="confidence")
predict(fit6a, newdata = data.frame(wt2=wt), interval="confidence")
d <- data.frame(x = 1, y = 1:10)
d <- data.frame(x = 1, y = 1:10)
d
data.frame(x = 1)
d<-data.frame(x = 1)
class(d)
l<-list(2,3,5)
l
l<-c(2,3,5)
l
d<-data.frame(l = 0.5)
d
d<-data.frame(x = 1)
data.frame(x = 1)
data.frame(x = .5)
data.frame(x = .7)
predict(fit6a, newdata = data.frame(wt=2), interval="confidence")
predict(fit6a, newdata = data.frame(wt2=2), interval="confidence")
swirl
library(swirl)
rm(list=ls())
swirl()
lm(child ~ parent)
library(UsingR)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic<-fit$coef[1]
ols.slope<-fit$coef[2]
lhs-rhs
all.equal(lhs,rhs)
varChild <- var(galton$child)
varRes <- fit$residuals
varRes <- var(fit$residuals)
varEst <- var(est(slope=ols.slope,intercept=ols.ic))
varEst <- var(est(ols.slope,ols.ic))
all.equal(varRes,varEst)
all.equal(varChild,varRes+varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
devtools::install_github('rstudio/shinyapps')
install.packages("shiny")
shinyapps::setAccountInfo(
name="stephenfranklin",
token="AB029C40DFC0A524EEAF9C1F98B1196F",
secret="qpoT90A2ncppwbYLLkmAHIM4SWvsi+4M3Ag1I5mB")
deploy(App)`
setwd("~/coursera/ds3_data_products/dp_week1/shiny_tutorial/")
x<<-0
deploy(App)
library(shiny)
deploy(App)
library("shinyapps", lib.loc="~/Library/R/3.1/library")
setwd("~/coursera/ds3_data_products/dp_week1/shiny_tutorial/")
x<<-0
deploy(App)
deployApp()
deployApp()
library("slidify", lib.loc="~/Library/R/3.1/library")
library("slidifyLibraries", lib.loc="~/Library/R/3.1/library")
setwd("~/coursera/ds3_data_products/dp_week2/slidify_tutorial/")
author("first_deck")
author("first_deck")
author("first_deck")
setwd("~/coursera/ds3_data_products/dp_week2/slidify_tutorial/")
author("first_deck")
detach("package:slidifyLibraries", unload=TRUE)
setwd("~/coursera/ds3_data_products/dp_week2/slidify_tutorial/")
author("first_deck")
setwd("~/coursera/ds3_data_products/dp_week2/slidify_tutorial/")
library("slidify", lib.loc="~/Library/R/3.1/library")
setwd("~/coursera/ds3_data_products/dp_week2/slidify_tutorial/")
author("first_deck")
slidify("index.Rmd")
library(knitr)
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
x <- rnorm(5)
x
y <- pnorm(x)
y
qnorm(x)
pnorm(x)
dnorm(x)
pnorm(x)
mean(x)
author("slidify_tutorial_slides")
setwd("~/coursera/ds3_data_products/dp_week2/slidify_tutorial/slidify_tutorial_slides/")
setwd("~/coursera/ds3_data_products/dp_week2/slidify_tutorial/")
browseURL("index.html")
browseURL("index.html")
slidify("index.Rmd")
setwd("~/coursera/ds3_data_products/dp_week2/slidify_tutorial_slides")
setwd("~/coursera/ds3_data_products/dp_week2/")
slidify("index.Rmd")
setwd("~/coursera/ds3_data_products/dp_week2/")
author("slidify_tutorial_slides")
